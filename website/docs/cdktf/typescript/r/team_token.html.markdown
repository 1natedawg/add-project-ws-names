---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_team_token"
description: |-
  Generates a new team token and overrides existing token if one exists.
---

# tfe_team_token

Generates a new team token and overrides existing token if one exists.

## Example Usage

Basic usage:

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as tfe from "./.gen/providers/tfe";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const tfeTeamTest = new tfe.team.Team(this, "test", {
      name: "my-team-name",
      organization: "my-org-name",
    });
    const tfeTeamTokenTest = new tfe.teamToken.TeamToken(this, "test_1", {
      teamId: cdktf.Token.asString(tfeTeamTest.id),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    tfeTeamTokenTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are supported:

* `teamId` - (Required) ID of the team.
* `forceRegenerate` - (Optional) If set to `true`, a new token will be
  generated even if a token already exists. This will invalidate the existing
  token!

## Attributes Reference

* `id` - The ID of the token.
* `token` - The generated token.

## Import

Team tokens can be imported; use `<TEAM ID>` as the import ID. For example:

```shell
terraform import tfe_team_token.test team-47qC3LmA47piVan7
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-58bf9c717759059affcdee4abf63ef4ecd06e8c350c399909b94c3333e36de27 -->