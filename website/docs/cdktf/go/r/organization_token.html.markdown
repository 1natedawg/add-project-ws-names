---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_organization_token"
description: |-
  Generates a new organization token, replacing any existing token.
---

# tfe_organization_token

Generates a new organization token, replacing any existing token. This token
can be used to act as the organization service account.

## Example Usage

Basic usage:

```go
import constructs "github.com/aws/constructs-go/constructs"
import cdktf "github.com/hashicorp/terraform-cdk-go/cdktf"
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import "github.com/aws-samples/dummy/gen/providers/tfe/organizationToken"
type myConvertedCode struct {
	terraformStack
}

func newMyConvertedCode(scope construct, name *string) *myConvertedCode {
	this := &myConvertedCode{}
	cdktf.NewTerraformStack_Override(this, scope, name)
	organizationToken.NewOrganizationToken(this, jsii.String("test"), &organizationTokenConfig{
		organization: jsii.String("my-org-name"),
	})
	return this
}
```

## Argument Reference

The following arguments are supported:

* `Organization` - (Optional) Name of the organization. If omitted, organization must be defined in the provider config.
* `ForceRegenerate` - (Optional) If set to `True`, a new token will be
  generated even if a token already exists. This will invalidate the existing
  token!

## Attributes Reference

* `Id` - The ID of the token.
* `Token` - The generated token.

## Import

Organization tokens can be imported; use `<ORGANIZATION NAME>` as the import ID.
For example:

```shell
terraform import tfe_organization_token.test my-org-name
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-f6e186466af3bb810c8de7cda91664768b67da266b77e06c6e2905788d99f9b9 -->